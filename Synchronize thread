Question :

create one counter method and make this method synchronize and then call this method from different threads five times.

Explanation:

While we use synchronize a method and call this method from a different thread then still it executes this thread in a synchronous way.

In this program, I created one class synchronized thread which has one synchronized counter method in this method simply increment the I by one. Also, I create two other class thread 1 and thread 2 in this both class I implements the run method and in this run method, I simply call the counter method five-time.

In the main method, I create objects of thread 1 and thread 2 and then I create two threads and pass the object.

Example

Output: 1
        2
        3
        4
        5
        1
        2
        3
        4
        5



//program

public class SynchronizeThread {
    int i=0;
    synchronized void counter(){
        i++;
        System.out.println(i);
    }
}

class thread1 extends SynchronizeThread implements Runnable{
    @Override
    public void run() {
        for (int i = 0; i < 5; i++) {
            counter();
        }
    }
}

class thread2 extends SynchronizeThread implements Runnable{
    @Override
    public void run() {
        for (int i = 0; i < 5; i++) {
            counter();
        }
    }
}

class synchronizedthread_exe{
    public static void main(String[] args) throws InterruptedException {
        thread1 t1 = new thread1();
        thread2 t2 = new thread2();
        Thread tt1 = new Thread(t1);
        Thread tt2 = new Thread(t2);

        tt1.start();
        tt2.start();
    }
}
